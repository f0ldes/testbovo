{"ast":null,"code":"import axios from \"axios\";\n\n/*\nconst contactUsApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_CONTACT_US_API}`);\nconst employeeRegApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYEE_REG_API}`);\nconst employerRegApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYER_REG_API}`);\n\nconst employeeEmailCheckApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYEE_EMAILCHECK_API}`);\nconst employerEmailCheckApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYER_EMAILCHECK_API}`);\n*/\n\nconst contactUsApi = `${process.env.REACT_APP_CONTACT_US_API}`;\nconst employeeRegApi = `${process.env.REACT_APP_EMPLOYEE_REG_API}`;\nconst employerRegApi = `${process.env.REACT_APP_EMPLOYER_REG_API}`;\nconst employeeEmailCheckApi = `${process.env.REACT_APP_EMPLOYEE_EMAILCHECK_API}`;\nconst employerEmailCheckApi = `${process.env.REACT_APP_EMPLOYER_EMAILCHECK_API}`;\nconst employeeTokenCheckApi = `${process.env.REACT_APP_EMPLOYEE_TOKENCHECK_API}`;\nconst employerTokenCheckApi = `${process.env.REACT_APP_EMPLOYER_TOKENCHECK_API}`;\nconst apiKey = process.env.REACT_APP_API_KEY;\n;\n;\n;\n;\n;\nconst fetchData = async (formData, apiUrl) => {\n  const config = {\n    method: 'POST',\n    /* Post method van mindenhol */\n    url: apiUrl,\n    data: formData\n  };\n  try {\n    const response = await axios(config);\n    return response.data;\n  } catch (error) {\n    const fetchError = error;\n    console.error('Error during fetch:', fetchError.response || fetchError.message);\n    throw error;\n  }\n  ;\n};\nexport { fetchData, contactUsApi, employeeRegApi, employerRegApi, employeeEmailCheckApi, employerEmailCheckApi, employeeTokenCheckApi, employerTokenCheckApi, apiKey };","map":{"version":3,"names":["axios","contactUsApi","process","env","REACT_APP_CONTACT_US_API","employeeRegApi","REACT_APP_EMPLOYEE_REG_API","employerRegApi","REACT_APP_EMPLOYER_REG_API","employeeEmailCheckApi","REACT_APP_EMPLOYEE_EMAILCHECK_API","employerEmailCheckApi","REACT_APP_EMPLOYER_EMAILCHECK_API","employeeTokenCheckApi","REACT_APP_EMPLOYEE_TOKENCHECK_API","employerTokenCheckApi","REACT_APP_EMPLOYER_TOKENCHECK_API","apiKey","REACT_APP_API_KEY","fetchData","formData","apiUrl","config","method","url","data","response","error","fetchError","console","message"],"sources":["/Users/foldes/abovo/preReg/src/utils/utilsFetch.ts"],"sourcesContent":["import axios, {AxiosError} from \"axios\";\n\n/*\nconst contactUsApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_CONTACT_US_API}`);\nconst employeeRegApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYEE_REG_API}`);\nconst employerRegApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYER_REG_API}`);\n\nconst employeeEmailCheckApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYEE_EMAILCHECK_API}`);\nconst employerEmailCheckApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYER_EMAILCHECK_API}`);\n*/\n\nconst contactUsApi = `${process.env.REACT_APP_CONTACT_US_API}`;\nconst employeeRegApi = `${process.env.REACT_APP_EMPLOYEE_REG_API}`;\nconst employerRegApi = `${process.env.REACT_APP_EMPLOYER_REG_API}`;\n\nconst employeeEmailCheckApi = `${process.env.REACT_APP_EMPLOYEE_EMAILCHECK_API}`;\nconst employerEmailCheckApi = `${process.env.REACT_APP_EMPLOYER_EMAILCHECK_API}`;\n\nconst employeeTokenCheckApi = `${process.env.REACT_APP_EMPLOYEE_TOKENCHECK_API}`;\nconst employerTokenCheckApi = `${process.env.REACT_APP_EMPLOYER_TOKENCHECK_API}`;\n\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\ninterface contactUsFormData {\n    apikey: string | undefined;\n    first_name: string;\n    last_name: string;\n    email: string;\n    country_code: string;\n    phone_number: string;\n    msg_text: string;\n    subscribes_to_newsletter: number;\n    data_protection_terms_criteria: number;\n};\n\ninterface employeeRegData {\n    apikey: string | undefined;\n    reg_date: string;\n    first_name: string;\n    email: string;\n    terms_and_conditions: number;\n    data_protection_terms: number;\n    subscribes_to_newsletter: number;\n};\n\ninterface employerRegData {\n    apikey: string | undefined;\n    reg_date: string;\n    company_name: string;\n    email: string;\n    address_zip: string;\n    address_city: string;\n    address: string;\n    tax_number: string;\n    industry_id: number;\n    number_of_employees: string;\n    contact_person_first_name: string;\n    contact_person_last_name: string;\n    country_code: string;\n    phone_number: string;\n    contact_person_position: number;\n    terms_and_conditions: number;\n    data_protection_terms: number;\n    subscribes_to_newsletter: number;\n};\n\ninterface employeeEmailCheck {\n    apikey: string | undefined;\n    email: string;\n};\n\ninterface tokenData {\n    token: string\n};\n\ntype FormData = contactUsFormData | employerRegData | employeeRegData | employeeEmailCheck | tokenData;\n\nconst fetchData = async (formData: FormData, apiUrl: string | undefined) => {\n    const config = {\n        method: 'POST', /* Post method van mindenhol */\n        url: apiUrl,\n        data: formData,\n    };\n\n    try {\n        const response =  await axios(config);\n        return response.data;\n    } catch (error) {\n        const fetchError = error as AxiosError;\n        console.error('Error during fetch:',  fetchError.response || fetchError.message)\n        throw error;\n    };\n\n};\n\n\nexport {\n    fetchData,\n    contactUsApi,\n    employeeRegApi,\n    employerRegApi, \n    employeeEmailCheckApi,\n    employerEmailCheckApi,\n    employeeTokenCheckApi,\n    employerTokenCheckApi,\n    apiKey\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAoB,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,wBAAyB,EAAC;AAC9D,MAAMC,cAAc,GAAI,GAAEH,OAAO,CAACC,GAAG,CAACG,0BAA2B,EAAC;AAClE,MAAMC,cAAc,GAAI,GAAEL,OAAO,CAACC,GAAG,CAACK,0BAA2B,EAAC;AAElE,MAAMC,qBAAqB,GAAI,GAAEP,OAAO,CAACC,GAAG,CAACO,iCAAkC,EAAC;AAChF,MAAMC,qBAAqB,GAAI,GAAET,OAAO,CAACC,GAAG,CAACS,iCAAkC,EAAC;AAEhF,MAAMC,qBAAqB,GAAI,GAAEX,OAAO,CAACC,GAAG,CAACW,iCAAkC,EAAC;AAChF,MAAMC,qBAAqB,GAAI,GAAEb,OAAO,CAACC,GAAG,CAACa,iCAAkC,EAAC;AAGhF,MAAMC,MAAM,GAAGf,OAAO,CAACC,GAAG,CAACe,iBAAiB;AAY3C;AAUA;AAqBA;AAKA;AAIA;AAID,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAkB,EAAEC,MAA0B,KAAK;EACxE,MAAMC,MAAM,GAAG;IACXC,MAAM,EAAE,MAAM;IAAE;IAChBC,GAAG,EAAEH,MAAM;IACXI,IAAI,EAAEL;EACV,CAAC;EAED,IAAI;IACA,MAAMM,QAAQ,GAAI,MAAM1B,KAAK,CAACsB,MAAM,CAAC;IACrC,OAAOI,QAAQ,CAACD,IAAI;EACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,MAAMC,UAAU,GAAGD,KAAmB;IACtCE,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAGC,UAAU,CAACF,QAAQ,IAAIE,UAAU,CAACE,OAAO,CAAC;IAChF,MAAMH,KAAK;EACf;EAAC;AAEL,CAAC;AAGD,SACIR,SAAS,EACTlB,YAAY,EACZI,cAAc,EACdE,cAAc,EACdE,qBAAqB,EACrBE,qBAAqB,EACrBE,qBAAqB,EACrBE,qBAAqB,EACrBE,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}