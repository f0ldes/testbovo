{"ast":null,"code":"var _jsxFileName = \"/Users/foldes/landing_v2/landingv2/src/componenets/Employer.tsx\",\n  _s = $RefreshSig$();\nimport '../styles/employerReg.css';\nimport { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport { industryOptions, numberOfEmployeeOptions } from '../utils/utilsOptions';\n// muszaly külön, név szerint importálni\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\n/* Employer registration from */\nconst EmployerReg = () => {\n  _s();\n  const {\n    control,\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues,\n    setError,\n    clearErrors,\n    setValue\n  } = useForm();\n  const [message, setMessage] = useState(\"\");\n  const [formData, setFormData] = useState({});\n  const [currentSection, setCurrentSection] = useState(1);\n  const onSubmit = async data => {\n    setFormData({\n      ...formData,\n      ...data\n    });\n    if (currentSection === 2) {\n      // ide jon majd a fetch\n      console.log(formData);\n    } else {\n      setCurrentSection(currentSection + 1);\n    }\n  };\n  const checkEmailExists = async email => {};\n\n  //conditional rendering different JSX:\n  const renderFormSection = () => {\n    switch (currentSection) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded p-3 mx-auto employerinnerreg-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin-custom\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/abovoLogo.svg\",\n                alt: \"Abovo logo\",\n                id: \"abovoLogo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"preregistration-form-title\",\n            children: \" C\\xE9gadatok: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            className: \"w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"companyName\",\n                children: \" T\\xE1rsas\\xE1g megnevez\\xE9se \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"companyName\",\n                placeholder: \"Xy kft.\",\n                ...register(\"companyName\", {\n                  required: \"A cég neve nem lehet üres.\",\n                  maxLength: {\n                    value: 255,\n                    message: \"A cég neve nem lehet 255 karakternél hosszabb.\"\n                  }\n                }),\n                className: `form-control custom-input ${errors.companyName ? 'is-invalid' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), errors.companyName && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.companyName.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"companyEmail\",\n                children: \" T\\xE1rsas\\xE1g e-mail c\\xEDme \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"employeeEmail\",\n                placeholder: \"horvathrenata@mail.com\",\n                ...register(\"companyEmail\", {\n                  required: \"E-mail cím kötelező.\"\n                }),\n                onBlur: () => checkEmailExists(getValues(\"companyEmail\")),\n                className: `form-control custom-input ${errors.companyEmail ? 'is-invalid' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this), errors.companyEmail && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.companyEmail.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"addressZip\",\n                children: \" \\xEDr\\xE1ny\\xEDt\\xF3sz\\xE1m: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"addressZip\",\n                placeholder: \"1221\",\n                ...register(\"addressZip\", {\n                  required: \"A cég neve nem lehet üres.\",\n                  maxLength: {\n                    value: 4,\n                    message: \"A cég írányitószáma nem hosszabb rövidebb 4 karakternél.\"\n                  },\n                  minLength: {\n                    value: 4,\n                    message: \"A cég írányitószáma nem lehet rövidebb 4 karakternél.\"\n                  }\n                }),\n                className: `form-control custom-input ${errors.addressZip ? 'is-invalid' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this), errors.addressZip && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.addressZip.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"addressCity\",\n                children: \" Telep\\xFCl\\xE9s \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"addressCity\",\n                placeholder: \"\\xCDrd be\",\n                ...register(\"addressCity\", {\n                  required: \"A város nem lehet üres.\",\n                  maxLength: {\n                    value: 255,\n                    message: \"A város neve nem lehet 255 karakternél hosszabb.\"\n                  }\n                }),\n                className: `form-control custom-input ${errors.addressCity ? 'is-invalid' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this), errors.addressCity && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.addressCity.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \" C\\xEDm \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"address\",\n                placeholder: \"F\\u0151 utca 5/4\",\n                ...register(\"address\", {\n                  required: \"A cím nem lehet üres.\",\n                  maxLength: {\n                    value: 255,\n                    message: \"A cím neve nem lehet 255 karakternél hosszabb.\"\n                  }\n                }),\n                className: `form-control custom-input ${errors.address ? 'is-invalid' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), errors.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.address.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"taxNumber\",\n                children: \" Ad\\xF3sz\\xE1m \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"taxNumber\",\n                placeholder: \"11111111-1-11\",\n                ...register(\"taxNumber\", {\n                  required: \"A cím nem lehet üres.\",\n                  maxLength: {\n                    value: 11,\n                    message: \"Adószám 11 karakternél nem lehet hosszabb.\"\n                  }\n                }),\n                className: `form-control custom-input ${errors.taxNumber ? 'is-invalid' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this), errors.taxNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.taxNumber.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 58\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"industryId\",\n                children: \"Ipar\\xE1g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"industryId\",\n                control: control,\n                rules: {\n                  required: 'This field is required'\n                },\n                render: ({\n                  field: {\n                    onChange,\n                    onBlur,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(Select, {\n                  options: industryOptions,\n                  placeholder: \"V\\xE1lassz\",\n                  isClearable: true,\n                  isSearchable: true,\n                  onBlur: onBlur,\n                  ref: ref,\n                  value: industryOptions.find(industryOption => industryOption.value === value),\n                  onChange: selectedOption => {\n                    onChange(selectedOption ? selectedOption.value : '');\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this), errors.industryId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.industryId.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"numberOfEmployees\",\n                children: \" Alkalmazottak sz\\xE1ma \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"numberOfEmployees\",\n                control: control,\n                rules: {\n                  required: 'This field is required'\n                },\n                render: ({\n                  field: {\n                    onChange,\n                    onBlur,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(Select, {\n                  options: numberOfEmployeeOptions,\n                  placeholder: \"V\\xE1lassz\",\n                  isClearable: true,\n                  isSearchable: true,\n                  onBlur: onBlur,\n                  ref: ref,\n                  value: numberOfEmployeeOptions.find(numberOfEmployeeOption => numberOfEmployeeOption.value === value),\n                  onChange: selectedOption => {\n                    onChange(selectedOption ? selectedOption.value : '');\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this), errors.industryId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.industryId.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary registration-button w-100 mt-3\",\n              onClick: handleSubmit(onSubmit),\n              children: \" Tov\\xE1bb \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded p-3 mx-auto employerinnerreg-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin-custom\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"images/abovoLogo.svg\",\n                alt: \"Abovo logo\",\n                id: \"abovoLogo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"preregistration-form-title\",\n            children: \" Kapcsolattart\\xF3 adatai: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            className: \"w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"contactPersonFirstName\",\n                children: \" Kapcsolattart\\xF3 keresztneve: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"contactPersonFirstName\",\n                placeholder: \"Ren\\xE1ta\",\n                ...register(\"contactPersonFirstName\", {\n                  required: \"A kapcsolattartó nem lehet üres.\",\n                  maxLength: {\n                    value: 255,\n                    message: \"A kapcsolattartó keresztneve nem lehet több mint 255 karakter.\"\n                  }\n                }),\n                className: `form-control custom-input ${errors.contactPersonFirstName ? 'is-invalid' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 37\n              }, this), errors.contactPersonFirstName && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.contactPersonFirstName.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"contactPersonLastName\",\n                children: \" Kapcsolattart\\xF3 vezet\\xE9kneve: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"contactPersonLastName\",\n                placeholder: \"Horv\\xE1th\",\n                ...register(\"companyEmail\", {\n                  required: \"Kapcsolattartó vezetékneve nem lehet üres.\",\n                  maxLength: {\n                    value: 255,\n                    message: \"A kapcsolattartó keretsztneve nem lehet több mint 255 karakter.\"\n                  }\n                }),\n                onBlur: () => checkEmailExists(getValues(\"companyEmail\")),\n                className: `form-control custom-input ${errors.companyEmail ? 'is-invalid' : ''}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 41\n              }, this), errors.companyEmail && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: errors.companyEmail.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"phone-container\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary registration-button w-100 mt-3\",\n              onClick: handleSubmit(onSubmit),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employerreg-container\",\n    children: renderFormSection()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployerReg, \"tbvyLI0E4HPyX8TCUYVjyV1CTeI=\", false, function () {\n  return [useForm];\n});\n_c = EmployerReg;\nexport default EmployerReg;\nvar _c;\n$RefreshReg$(_c, \"EmployerReg\");","map":{"version":3,"names":["useState","useForm","Controller","Link","Select","industryOptions","numberOfEmployeeOptions","jsxDEV","_jsxDEV","EmployerReg","_s","control","register","handleSubmit","formState","errors","getValues","setError","clearErrors","setValue","message","setMessage","formData","setFormData","currentSection","setCurrentSection","onSubmit","data","console","log","checkEmailExists","email","renderFormSection","className","children","to","src","alt","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","required","maxLength","value","companyName","onBlur","companyEmail","minLength","addressZip","addressCity","address","taxNumber","name","rules","render","field","onChange","ref","options","isClearable","isSearchable","find","industryOption","selectedOption","industryId","numberOfEmployeeOption","onClick","contactPersonFirstName","_c","$RefreshReg$"],"sources":["/Users/foldes/landing_v2/landingv2/src/componenets/Employer.tsx"],"sourcesContent":["import '../styles/employerReg.css';\nimport { useState } from 'react';\nimport { SubmitHandler, useForm, Controller } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport Select, { SingleValue } from 'react-select';\nimport { industryOptions, numberOfEmployeeOptions } from '../utils/utilsOptions';\nimport { IndustryOptionType, EmployeeNumberOptionsType } from '../utils/utilsOptions'; // muszaly külön, név szerint importálni\nimport { fetchData, employerRegApi, apiKey, employerEmailCheckApi } from '../utils/utilsFetch'\n\ninterface formData {\n    companyName: string;\n    companyEmail: string;\n    addressZip: string;\n    addressCity: string;\n    address: string;\n    taxNumber: string;\n    industryId: string;\n    numberOfEmployees: string;\n    contactPersonFirstName: string;\n    contactPersonLastName: string;\n    country_code: string;\n    phone_number: string;\n    contact_person_position: string | number;\n    terms_and_conditions: boolean;\n    data_protection_terms: boolean;\n    subscribes_to_newsletter: boolean;\n};\n\n\n/* Employer registration from */\nconst EmployerReg = () => {\n    const { control, register, handleSubmit, formState: { errors }, getValues, setError, clearErrors, setValue } = useForm<formData>();\n    const [message, setMessage] = useState<string>(\"\");\n    const [formData, setFormData] = useState({});\n    const [currentSection, setCurrentSection] = useState(1);\n\n    const onSubmit: SubmitHandler<formData> = async (data) => {\n        setFormData({...formData, ...data});\n\n        if (currentSection === 2) {\n            // ide jon majd a fetch\n            console.log(formData);\n        } else {\n            setCurrentSection(currentSection + 1);\n        }\n    };\n\n    const checkEmailExists = async (email:string) => {\n\n    };\n\n    //conditional rendering different JSX:\n    const renderFormSection = () => {\n        switch (currentSection) {\n            case 1:\n                return (\n                    \n                        <div className=\"border rounded p-3 mx-auto employerinnerreg-container\">\n            \n                            <div className=\"margin-custom\">\n                                <Link to='/'>\n                                    <img src=\"images/abovoLogo.svg\" alt=\"Abovo logo\" id=\"abovoLogo\" />\n                                </Link>\n                            </div>\n            \n                            <h1 className=\"preregistration-form-title\"> Cégadatok: </h1>\n            \n                            <form onSubmit={handleSubmit(onSubmit)} className=\"w-100\">\n            \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"companyName\"> Társaság megnevezése </label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"companyName\"\n                                        placeholder='Xy kft.'\n                                        {...register(\"companyName\", { \n                                            required: \"A cég neve nem lehet üres.\",\n                                            maxLength: {\n                                                value: 255,\n                                                message: \"A cég neve nem lehet 255 karakternél hosszabb.\"\n                                            }\n                                        })}\n                                        className={`form-control custom-input ${errors.companyName ? 'is-invalid' : ''}`}                          \n                                    />\n                                    {errors.companyName && <div className=\"invalid-feedback\">{errors.companyName.message as string}</div>}\n                                </div>\n            \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"companyEmail\"> Társaság e-mail címe </label>\n                                        <input\n                                            type=\"email\"\n                                            id=\"employeeEmail\"\n                                            placeholder=\"horvathrenata@mail.com\"\n                                            {...register(\"companyEmail\", {required: \"E-mail cím kötelező.\"})}\n                                            onBlur={() => checkEmailExists(getValues(\"companyEmail\"))}\n                                            className={`form-control custom-input ${errors.companyEmail ? 'is-invalid' : ''}`}\n                                        />\n                                    {errors.companyEmail && <div className=\"invalid-feedback\">{errors.companyEmail.message as string}</div>}\n                                </div>\n            \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"addressZip\"> írányítószám: </label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"addressZip\"\n                                        placeholder='1221'\n                                        {...register(\"addressZip\", { \n                                            required: \"A cég neve nem lehet üres.\",\n                                            maxLength: {\n                                                value: 4,\n                                                message: \"A cég írányitószáma nem hosszabb rövidebb 4 karakternél.\"\n                                            },\n                                            minLength: {\n                                                value: 4,\n                                                message: \"A cég írányitószáma nem lehet rövidebb 4 karakternél.\"\n                                            }\n                                        })}\n                                        className={`form-control custom-input ${errors.addressZip ? 'is-invalid' : ''}`}                          \n                                    />\n                                    {errors.addressZip && <div className=\"invalid-feedback\">{errors.addressZip.message as string}</div>}\n                                </div>\n            \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"addressCity\"> Település </label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"addressCity\"\n                                        placeholder='Írd be'\n                                        {...register(\"addressCity\", { \n                                            required: \"A város nem lehet üres.\",\n                                            maxLength: {\n                                                value: 255,\n                                                message: \"A város neve nem lehet 255 karakternél hosszabb.\"\n                                            }\n                                        })}\n                                        className={`form-control custom-input ${errors.addressCity ? 'is-invalid' : ''}`}                          \n                                    />\n                                    {errors.addressCity && <div className=\"invalid-feedback\">{errors.addressCity.message as string}</div>}\n                                </div>\n            \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"address\"> Cím </label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"address\"\n                                        placeholder='Fő utca 5/4'\n                                        {...register(\"address\", { \n                                            required: \"A cím nem lehet üres.\",\n                                            maxLength: {\n                                                value: 255,\n                                                message: \"A cím neve nem lehet 255 karakternél hosszabb.\"\n                                            }\n                                        })}\n                                        className={`form-control custom-input ${errors.address ? 'is-invalid' : ''}`}                          \n                                    />\n                                    {errors.address && <div className=\"invalid-feedback\">{errors.address.message as string}</div>}\n                                </div>\n            \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"taxNumber\"> Adószám </label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"taxNumber\"\n                                        placeholder='11111111-1-11'\n                                        {...register(\"taxNumber\", { \n                                            required: \"A cím nem lehet üres.\",\n                                            maxLength: {\n                                                value: 11,\n                                                message: \"Adószám 11 karakternél nem lehet hosszabb.\"\n                                            }\n                                        })}\n                                        className={`form-control custom-input ${errors.taxNumber ? 'is-invalid' : ''}`}                          \n                                    />\n                                    {errors.taxNumber && <div className=\"invalid-feedback\">{errors.taxNumber.message as string}</div>}\n                                </div>\n            \n            \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"industryId\">Iparág</label>\n                                    <Controller\n                                        name=\"industryId\"\n                                        control={control}\n                                        rules={{ required: 'This field is required' }}\n                                        render={({ field: { onChange, onBlur, value, ref } }) => (\n                                            <Select<IndustryOptionType>\n                                                options={industryOptions}\n                                                placeholder=\"Válassz\"\n                                                isClearable\n                                                isSearchable\n                                                onBlur={onBlur} \n                                                ref={ref}        \n                                                value={industryOptions.find(industryOption => industryOption.value === value)}  \n                                                onChange={(selectedOption: SingleValue<IndustryOptionType>) => {\n                                                    onChange(selectedOption ? selectedOption.value : '')\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                    {errors.industryId && <div className=\"invalid-feedback\">{errors.industryId.message}</div>}\n                                </div>\n            \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"numberOfEmployees\"> Alkalmazottak száma </label>\n                                    <Controller\n                                        name=\"numberOfEmployees\"\n                                        control={control}\n                                        rules={{ required: 'This field is required' }}\n                                        render={({ field: { onChange, onBlur, value, ref } }) => (\n                                            <Select<EmployeeNumberOptionsType>\n                                                options={numberOfEmployeeOptions}\n                                                placeholder=\"Válassz\"\n                                                isClearable\n                                                isSearchable\n                                                onBlur={onBlur} \n                                                ref={ref}        \n                                                value={numberOfEmployeeOptions.find(numberOfEmployeeOption => numberOfEmployeeOption.value === value)}  \n                                                onChange={(selectedOption: SingleValue<EmployeeNumberOptionsType>) => {\n                                                    onChange(selectedOption ? selectedOption.value : '')\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                    {errors.industryId && <div className=\"invalid-feedback\">{errors.industryId.message}</div>}\n                                </div>\n\n                                <button type=\"submit\" className=\"btn btn-primary registration-button w-100 mt-3\" onClick={handleSubmit(onSubmit)}> Tovább </button>\n            \n                            </form>\n\n                        </div>\n                );\n            case 2:\n                return (\n                    \n                        <div className=\"border rounded p-3 mx-auto employerinnerreg-container\">\n                            <div className=\"margin-custom\">\n                                <Link to='/'>\n                                    <img src=\"images/abovoLogo.svg\" alt=\"Abovo logo\" id=\"abovoLogo\" />\n                                </Link>\n                            </div>\n\n                            <h1 className=\"preregistration-form-title\"> Kapcsolattartó adatai: </h1>\n\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"w-100\">\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"contactPersonFirstName\"> Kapcsolattartó keresztneve: </label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"contactPersonFirstName\"\n                                        placeholder='Renáta'\n                                        {...register(\"contactPersonFirstName\", { \n                                            required: \"A kapcsolattartó nem lehet üres.\",\n                                            maxLength: {\n                                                value: 255,\n                                                message: \"A kapcsolattartó keresztneve nem lehet több mint 255 karakter.\"\n                                            }\n                                        })}\n                                        className={`form-control custom-input ${errors.contactPersonFirstName ? 'is-invalid' : ''}`}                          \n                                    />\n                                    {errors.contactPersonFirstName && <div className=\"invalid-feedback\">{errors.contactPersonFirstName.message as string}</div>}\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"contactPersonLastName\"> Kapcsolattartó vezetékneve: </label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"contactPersonLastName\"\n                                            placeholder=\"Horváth\"\n                                            {...register(\"companyEmail\", {\n                                                required: \"Kapcsolattartó vezetékneve nem lehet üres.\",\n                                                maxLength: {\n                                                    value: 255,\n                                                    message: \"A kapcsolattartó keretsztneve nem lehet több mint 255 karakter.\"\n                                                }\n                                            })}\n                                            onBlur={() => checkEmailExists(getValues(\"companyEmail\"))}\n                                            className={`form-control custom-input ${errors.companyEmail ? 'is-invalid' : ''}`}\n                                        />\n                                    {errors.companyEmail && <div className=\"invalid-feedback\">{errors.companyEmail.message as string}</div>}\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <div className=\"phone-container\">\n\n                                    </div>\n                                </div>\n\n                                <button type=\"submit\" className=\"btn btn-primary registration-button w-100 mt-3\" onClick={handleSubmit(onSubmit)}>Register</button>\n\n                            </form>\n\n                        </div>        \n                       \n                )  \n        }\n    }\n\n    return (\n        <div className=\"employerreg-container\">\n            {renderFormSection()}\n        </div>\n    )\n};\n\nexport default EmployerReg;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}