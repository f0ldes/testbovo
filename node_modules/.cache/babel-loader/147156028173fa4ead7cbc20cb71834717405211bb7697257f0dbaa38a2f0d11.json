{"ast":null,"code":"import axios from\"axios\";/*\nconst contactUsApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_CONTACT_US_API}`);\nconst employeeRegApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYEE_REG_API}`);\nconst employerRegApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYER_REG_API}`);\n\nconst employeeEmailCheckApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYEE_EMAILCHECK_API}`);\nconst employerEmailCheckApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYER_EMAILCHECK_API}`);\n*/const contactUsApi=\"\".concat(process.env.REACT_APP_CONTACT_US_API);const employeeRegApi=\"\".concat(process.env.REACT_APP_EMPLOYEE_REG_API);const employerRegApi=\"\".concat(process.env.REACT_APP_EMPLOYER_REG_API);const employeeEmailCheckApi=\"\".concat(process.env.REACT_APP_EMPLOYEE_EMAILCHECK_API);const employerEmailCheckApi=\"\".concat(process.env.REACT_APP_EMPLOYER_EMAILCHECK_API);const apiKey=process.env.REACT_APP_API_KEY;;;;;const fetchData=async(formData,apiUrl)=>{const config={method:'POST',/* Post method van mindenhol */url:apiUrl,data:formData};try{const response=await axios(config);return response.data;}catch(error){const fetchError=error;console.error('Error during fetch:',fetchError.response||fetchError.message);throw error;};};export{fetchData,contactUsApi,employeeRegApi,employerRegApi,employeeEmailCheckApi,employerEmailCheckApi,apiKey};","map":{"version":3,"names":["axios","contactUsApi","concat","process","env","REACT_APP_CONTACT_US_API","employeeRegApi","REACT_APP_EMPLOYEE_REG_API","employerRegApi","REACT_APP_EMPLOYER_REG_API","employeeEmailCheckApi","REACT_APP_EMPLOYEE_EMAILCHECK_API","employerEmailCheckApi","REACT_APP_EMPLOYER_EMAILCHECK_API","apiKey","REACT_APP_API_KEY","fetchData","formData","apiUrl","config","method","url","data","response","error","fetchError","console","message"],"sources":["/Users/foldes/landing_v2/landingv2/src/utils/utilsFetch.ts"],"sourcesContent":["import axios, {AxiosError} from \"axios\";\n\n/*\nconst contactUsApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_CONTACT_US_API}`);\nconst employeeRegApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYEE_REG_API}`);\nconst employerRegApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYER_REG_API}`);\n\nconst employeeEmailCheckApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYEE_EMAILCHECK_API}`);\nconst employerEmailCheckApi = 'https://corsproxy.io/?' + encodeURIComponent(`${process.env.REACT_APP_EMPLOYER_EMAILCHECK_API}`);\n*/\n\nconst contactUsApi = `${process.env.REACT_APP_CONTACT_US_API}`;\nconst employeeRegApi = `${process.env.REACT_APP_EMPLOYEE_REG_API}`;\nconst employerRegApi = `${process.env.REACT_APP_EMPLOYER_REG_API}`;\n\nconst employeeEmailCheckApi = `${process.env.REACT_APP_EMPLOYEE_EMAILCHECK_API}`;\nconst employerEmailCheckApi = `${process.env.REACT_APP_EMPLOYER_EMAILCHECK_API}`;\n\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\ninterface contactUsFormData {\n    apikey: string | undefined;\n    first_name: string;\n    last_name: string;\n    email: string;\n    country_code: string;\n    phone_number: string;\n    msg_text: string;\n    subscribes_to_newsletter: number;\n    data_protection_terms_criteria: number;\n};\n\ninterface employeeRegData {\n    apikey: string | undefined;\n    reg_date: string;\n    first_name: string;\n    email: string;\n    terms_and_conditions: number;\n    data_protection_terms: number;\n    subscribes_to_newsletter: number;\n};\n\ninterface employerRegData {\n    apikey: string | undefined;\n    reg_date: string;\n    company_name: string;\n    email: string;\n    address_zip: string;\n    address_city: string;\n    address: string;\n    tax_number: string;\n    industry_id: number;\n    number_of_employees: string;\n    contact_person_first_name: string;\n    contact_person_last_name: string;\n    country_code: string;\n    phone_number: string;\n    contact_person_position: number;\n    terms_and_conditions: number;\n    data_protection_terms: number;\n    subscribes_to_newsletter: number;\n};\n\ninterface employeeEmailCheck {\n    apikey: string | undefined;\n    email: string;\n};\n\ntype FormData = contactUsFormData | employerRegData | employeeRegData | employeeEmailCheck;\n\nconst fetchData = async (formData: FormData, apiUrl: string | undefined) => {\n    const config = {\n        method: 'POST', /* Post method van mindenhol */\n        url: apiUrl,\n        data: formData,\n    };\n\n    try {\n        const response =  await axios(config);\n        return response.data;\n    } catch (error) {\n        const fetchError = error as AxiosError;\n        console.error('Error during fetch:',  fetchError.response || fetchError.message)\n        throw error;\n    };\n\n};\n\n\nexport {\n    fetchData,\n    contactUsApi,\n    employeeRegApi,\n    employerRegApi, \n    employeeEmailCheckApi,\n    employerEmailCheckApi,\n    apiKey\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAoB,OAAO,CAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,KAAM,CAAAC,YAAY,IAAAC,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAE,CAC9D,KAAM,CAAAC,cAAc,IAAAJ,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACG,0BAA0B,CAAE,CAClE,KAAM,CAAAC,cAAc,IAAAN,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACK,0BAA0B,CAAE,CAElE,KAAM,CAAAC,qBAAqB,IAAAR,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACO,iCAAiC,CAAE,CAChF,KAAM,CAAAC,qBAAqB,IAAAV,MAAA,CAAMC,OAAO,CAACC,GAAG,CAACS,iCAAiC,CAAE,CAGhF,KAAM,CAAAC,MAAM,CAAGX,OAAO,CAACC,GAAG,CAACW,iBAAiB,CAY3C,CAUA,CAqBA,CAKA,CAID,KAAM,CAAAC,SAAS,CAAG,KAAAA,CAAOC,QAAkB,CAAEC,MAA0B,GAAK,CACxE,KAAM,CAAAC,MAAM,CAAG,CACXC,MAAM,CAAE,MAAM,CAAE,+BAChBC,GAAG,CAAEH,MAAM,CACXI,IAAI,CAAEL,QACV,CAAC,CAED,GAAI,CACA,KAAM,CAAAM,QAAQ,CAAI,KAAM,CAAAvB,KAAK,CAACmB,MAAM,CAAC,CACrC,MAAO,CAAAI,QAAQ,CAACD,IAAI,CACxB,CAAE,MAAOE,KAAK,CAAE,CACZ,KAAM,CAAAC,UAAU,CAAGD,KAAmB,CACtCE,OAAO,CAACF,KAAK,CAAC,qBAAqB,CAAGC,UAAU,CAACF,QAAQ,EAAIE,UAAU,CAACE,OAAO,CAAC,CAChF,KAAM,CAAAH,KAAK,CACf,CAAC,CAEL,CAAC,CAGD,OACIR,SAAS,CACTf,YAAY,CACZK,cAAc,CACdE,cAAc,CACdE,qBAAqB,CACrBE,qBAAqB,CACrBE,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}