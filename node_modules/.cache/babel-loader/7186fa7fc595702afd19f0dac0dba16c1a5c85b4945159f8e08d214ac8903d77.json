{"ast":null,"code":"var _jsxFileName = \"/Users/foldes/landing_v2/landingv2/src/utils/utilsTaxInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaxNumberInput = ({\n  control,\n  name,\n  errors\n}) => {\n  _s();\n  const [formattedValue, setFormattedValue] = useState('');\n  const formatTaxNumber = value => {\n    // Remove non-digit characters and limit to 11 digits\n    const digits = value.replace(/\\D/g, '').substring(0, 11);\n\n    // Format the number like \"11111111-1-11\"\n    const formatted = digits.replace(/(\\d{8})(\\d{1})(\\d{2})/, '$1-$2-$3').replace(/-$/, ''); // Prevent trailing dash if the input is not yet complete\n\n    return formatted;\n  };\n  const handleInputChange = (value, onChange) => {\n    const unformattedValue = value.replace(/\\D/g, '');\n    setFormattedValue(formatTaxNumber(value));\n    onChange(unformattedValue);\n  };\n  const getErrorMessage = fieldError => {\n    return fieldError ? fieldError.message || '' : '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group mb-3 mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: \"Ad\\xF3sz\\xE1m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: control,\n      rules: {\n        required: 'A cím nem lehet üres.',\n        maxLength: {\n          value: 11,\n          message: 'Adószám 11 karakternél nem lehet hosszabb.'\n        }\n      },\n      render: ({\n        field: {\n          onChange,\n          onBlur,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: name,\n        value: formattedValue || formatTaxNumber(value || ''),\n        placeholder: \"11111111-1-11\",\n        onChange: e => handleInputChange(e.target.value, onChange),\n        onBlur: onBlur,\n        className: `form-control custom-input ${errors[name] ? 'is-invalid' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), errors[name] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: getErrorMessage(errors[name])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TaxNumberInput, \"dRB5it/oBbRt1SXKIw+TNUeo8DQ=\");\n_c = TaxNumberInput;\nexport { TaxNumberInput };\nvar _c;\n$RefreshReg$(_c, \"TaxNumberInput\");","map":{"version":3,"names":["React","useState","Controller","jsxDEV","_jsxDEV","TaxNumberInput","control","name","errors","_s","formattedValue","setFormattedValue","formatTaxNumber","value","digits","replace","substring","formatted","handleInputChange","onChange","unformattedValue","getErrorMessage","fieldError","message","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","rules","required","maxLength","render","field","onBlur","type","id","placeholder","e","target","_c","$RefreshReg$"],"sources":["/Users/foldes/landing_v2/landingv2/src/utils/utilsTaxInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Controller, Control, FieldErrors, FieldError } from 'react-hook-form';\n\ninterface TaxNumberInputProps {\n  control: Control<any>;\n  name: string;\n  errors: FieldErrors<any>;\n}\n\nconst TaxNumberInput: React.FC<TaxNumberInputProps> = ({ control, name, errors }) => {\n  const [formattedValue, setFormattedValue] = useState('');\n\n  const formatTaxNumber = (value: string): string => {\n    // Remove non-digit characters and limit to 11 digits\n    const digits = value.replace(/\\D/g, '').substring(0, 11);\n\n    // Format the number like \"11111111-1-11\"\n    const formatted = digits\n      .replace(/(\\d{8})(\\d{1})(\\d{2})/, '$1-$2-$3')\n      .replace(/-$/, ''); // Prevent trailing dash if the input is not yet complete\n\n    return formatted;\n  };\n\n  const handleInputChange = (value: string, onChange: (value: string) => void) => {\n    const unformattedValue = value.replace(/\\D/g, '');\n    setFormattedValue(formatTaxNumber(value));\n    onChange(unformattedValue);\n  };\n\n  const getErrorMessage = (fieldError: FieldError | undefined): string => {\n    return fieldError ? fieldError.message || '' : '';\n  };\n\n  return (\n    <div className=\"form-group mb-3 mt-3\">\n      <label htmlFor={name}>Adószám</label>\n      <Controller\n        name={name}\n        control={control}\n        rules={{\n          required: 'A cím nem lehet üres.',\n          maxLength: {\n            value: 11,\n            message: 'Adószám 11 karakternél nem lehet hosszabb.',\n          },\n        }}\n        render={({ field: { onChange, onBlur, value } }) => (\n          <input\n            type=\"text\"\n            id={name}\n            value={formattedValue || formatTaxNumber(value || '')}\n            placeholder=\"11111111-1-11\"\n            onChange={(e) => handleInputChange(e.target.value, onChange)}\n            onBlur={onBlur}\n            className={`form-control custom-input ${errors[name] ? 'is-invalid' : ''}`}\n          />\n        )}\n      />\n      {errors[name] && (\n        <div className=\"invalid-feedback\">{getErrorMessage(errors[name] as FieldError)}</div>\n      )}\n    </div>\n  );\n};\n\nexport {\n  TaxNumberInput\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}